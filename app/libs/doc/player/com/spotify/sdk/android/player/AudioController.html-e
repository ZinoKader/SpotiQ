<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_74) on Thu Jul 14 14:28:23 UTC 2016 -->
<title>AudioController (Spotify Android SDK Player - API Reference (1.0.0-beta13))</title>
<meta name="date" content="2016-07-14">
<link rel="stylesheet" type="text/css" href="../../../../../javadoc.css" title="Style">
<script type="text/javascript" src="../../../../../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="AudioController (Spotify Android SDK Player - API Reference (1.0.0-beta13))";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":6,"i1":6,"i2":6,"i3":6,"i4":6,"i5":6};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="../../../../../com/spotify/sdk/android/player/package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../../../../../com/spotify/sdk/android/player/AudioRingBuffer.html" title="class in com.spotify.sdk.android.player"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../../index.html?com/spotify/sdk/android/player/AudioController.html" target="_top">Frames</a></li>
<li><a href="AudioController.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">com.spotify.sdk.android.player</div>
<h2 title="Interface AudioController" class="title">Interface AudioController</h2>
</div>
<div class="contentContainer">
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public interface <span class="typeNameLabel">AudioController</span></pre>
<div class="block"><p>AudioController provides a way to get access to the audio data and implement a custom
 audio playback logic.</p>

 <p>If an object that implements this interface is passed to the <a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player"><code>Player</code></a> during creation
 it will override the default AudioController and it will receive PCM data in the
 <a href="../../../../../com/spotify/sdk/android/player/AudioController.html#onAudioDataDelivered-short:A-int-int-int-"><code>onAudioDataDelivered(short[], int, int, int)</code></a> callback. The controller is responsible for
 handling the data as well as <a href="../../../../../com/spotify/sdk/android/player/AudioController.html#onAudioFlush--"><code>onAudioFlush()</code></a> calls that will occur every time the
 audio buffer should be emptied.</p>

 <p><strong>Important:</strong> <a href="../../../../../com/spotify/sdk/android/player/AudioController.html#onAudioDataDelivered-short:A-int-int-int-"><code>onAudioDataDelivered(short[], int, int, int)</code></a> and <a href="../../../../../com/spotify/sdk/android/player/AudioController.html#onAudioFlush--"><code>onAudioFlush()</code></a> are synchronous
 and therefore blocking. Any long-running operations inside these methods will most likely result
 in a choppy playback. One of the possible ways of handling this
 is to only write to an audio buffer in the <a href="../../../../../com/spotify/sdk/android/player/AudioController.html#onAudioDataDelivered-short:A-int-int-int-"><code>onAudioDataDelivered(short[], int, int, int)</code></a> method
 and play the audio in a separate thread. <a href="../../../../../com/spotify/sdk/android/player/AudioRingBuffer.html" title="class in com.spotify.sdk.android.player"><code>AudioRingBuffer</code></a> can be
 used for that purpose.</p></div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../com/spotify/sdk/android/player/AudioController.html#onAudioDataDelivered-short:A-int-int-int-">onAudioDataDelivered</a></span>(short[]&nbsp;samples,
                    int&nbsp;sampleCount,
                    int&nbsp;sampleRate,
                    int&nbsp;channels)</code>
<div class="block">Called whenever <a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player"><code>Player</code></a> receives audio data.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../com/spotify/sdk/android/player/AudioController.html#onAudioFlush--">onAudioFlush</a></span>()</code>
<div class="block">Called when the <a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player"><code>Player</code></a> has flushed the audio buffer.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../com/spotify/sdk/android/player/AudioController.html#onAudioPaused--">onAudioPaused</a></span>()</code>
<div class="block">Called when audio playback should be paused (e.g.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../com/spotify/sdk/android/player/AudioController.html#onAudioResumed--">onAudioResumed</a></span>()</code>
<div class="block">Called when audio playback should be resumed (e.g.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../com/spotify/sdk/android/player/AudioController.html#start--">start</a></span>()</code>
<div class="block">Called when the controller is initialized by the <a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player"><code>Player</code></a>.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../com/spotify/sdk/android/player/AudioController.html#stop--">stop</a></span>()</code>
<div class="block">Called when the controller is stopped by the <a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player"><code>Player</code></a>.</div>
</td>
</tr>
</table>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="start--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>start</h4>
<pre>void&nbsp;start()</pre>
<div class="block">Called when the controller is initialized by the <a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player"><code>Player</code></a>.
 Happens only once - when <a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player"><code>Player</code></a> is created.
 This method should contain all set-up related logic such as
 starting a thread.</div>
</li>
</ul>
<a name="stop--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>stop</h4>
<pre>void&nbsp;stop()</pre>
<div class="block">Called when the controller is stopped by the <a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player"><code>Player</code></a>.
 Happens only once - when <a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player"><code>Player</code></a> is destroyed.
 This method should contain all tear-down related logic
 such as stopping the thread.</div>
</li>
</ul>
<a name="onAudioDataDelivered-short:A-int-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>onAudioDataDelivered</h4>
<pre>int&nbsp;onAudioDataDelivered(short[]&nbsp;samples,
                         int&nbsp;sampleCount,
                         int&nbsp;sampleRate,
                         int&nbsp;channels)</pre>
<div class="block">Called whenever <a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player"><code>Player</code></a> receives audio data.
 This method is synchronous and therefore blocking.
 Any long running operations will affect playback quality.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>samples</code> - 16-bit PCM data. The buffer contains sampleCount samples, whereby each sample contains the data
                    for a single audio channel.</dd>
<dd><code>sampleCount</code> - Number of samples in samples buffer.</dd>
<dd><code>sampleRate</code> - Sample rate in Hz (such as 22050, 44100 or 48000).</dd>
<dd><code>channels</code> - Number of channels (1 = mono, 2 = stereo).</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The number of samples that the application accepted.</dd>
</dl>
</li>
</ul>
<a name="onAudioFlush--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>onAudioFlush</h4>
<pre>void&nbsp;onAudioFlush()</pre>
<div class="block">Called when the <a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player"><code>Player</code></a> has flushed the audio buffer.
 Any buffered frames waiting to be played should be discarded.
 This method is synchronous and therefore blocking, so any
 long-running operations will affect playback quality.</div>
</li>
</ul>
<a name="onAudioPaused--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>onAudioPaused</h4>
<pre>void&nbsp;onAudioPaused()</pre>
<div class="block">Called when audio playback should be paused (e.g. the user has pressed
 the pause button). This can be used to pause audio playback and prevent
 buffered audio from being played.</div>
</li>
</ul>
<a name="onAudioResumed--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>onAudioResumed</h4>
<pre>void&nbsp;onAudioResumed()</pre>
<div class="block">Called when audio playback should be resumed (e.g. the user has pressed
 the play button after having paused).</div>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="../../../../../com/spotify/sdk/android/player/package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
<div class="aboutLanguage">&copy; Spotify AB, 2014. <a href="https://developer.spotify.com/developer-terms-of-use/" target="_blank">Terms of Use</a></div>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../../../../../com/spotify/sdk/android/player/AudioRingBuffer.html" title="class in com.spotify.sdk.android.player"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../../index.html?com/spotify/sdk/android/player/AudioController.html" target="_top">Frames</a></li>
<li><a href="AudioController.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
