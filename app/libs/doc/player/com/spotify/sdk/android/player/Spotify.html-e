<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_74) on Thu Jul 14 14:28:24 UTC 2016 -->
<title>Spotify (Spotify Android SDK Player - API Reference (1.0.0-beta13))</title>
<meta name="date" content="2016-07-14">
<link rel="stylesheet" type="text/css" href="../../../../../javadoc.css" title="Style">
<script type="text/javascript" src="../../../../../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Spotify (Spotify Android SDK Player - API Reference (1.0.0-beta13))";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":9,"i1":9,"i2":9,"i3":9,"i4":9};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="../../../../../com/spotify/sdk/android/player/package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../../com/spotify/sdk/android/player/PlayerStateCallback.html" title="interface in com.spotify.sdk.android.player"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li>Next&nbsp;Class</li>
</ul>
<ul class="navList">
<li><a href="../../../../../index.html?com/spotify/sdk/android/player/Spotify.html" target="_top">Frames</a></li>
<li><a href="Spotify.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">com.spotify.sdk.android.player</div>
<h2 title="Class Spotify" class="title">Class Spotify</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>com.spotify.sdk.android.player.Spotify</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public final class <span class="typeNameLabel">Spotify</span>
extends <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></pre>
<div class="block">The main "entry point" to the Spotify Android SDK.
 Use it to create and destroy the <a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player"><code>Player</code></a> object.
 The class ensures that only one instance of <a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player"><code>Player</code></a> is created.</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../com/spotify/sdk/android/player/Spotify.html#awaitDestroyPlayer-java.lang.Object-long-java.util.concurrent.TimeUnit-">awaitDestroyPlayer</a></span>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a>&nbsp;reference,
                  long&nbsp;timeout,
                  <a href="http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/TimeUnit.html?is-external=true" title="class or interface in java.util.concurrent">TimeUnit</a>&nbsp;timeUnit)</code>
<div class="block">Release a player resource.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../com/spotify/sdk/android/player/Spotify.html#destroyPlayer-java.lang.Object-">destroyPlayer</a></span>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a>&nbsp;reference)</code>
<div class="block">Release a player resource.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>static <a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player">Player</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../com/spotify/sdk/android/player/Spotify.html#getPlayer-com.spotify.sdk.android.player.Config-java.lang.Object-com.spotify.sdk.android.player.Player.InitializationObserver-">getPlayer</a></span>(<a href="../../../../../com/spotify/sdk/android/player/Config.html" title="class in com.spotify.sdk.android.player">Config</a>&nbsp;config,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a>&nbsp;reference,
         <a href="../../../../../com/spotify/sdk/android/player/Player.InitializationObserver.html" title="interface in com.spotify.sdk.android.player">Player.InitializationObserver</a>&nbsp;observer)</code>
<div class="block">Get (or possibly create) an instance of the player.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>static <a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player">Player</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../com/spotify/sdk/android/player/Spotify.html#getPlayer-com.spotify.sdk.android.player.Player.Builder-java.lang.Object-com.spotify.sdk.android.player.Player.InitializationObserver-">getPlayer</a></span>(<a href="../../../../../com/spotify/sdk/android/player/Player.Builder.html" title="class in com.spotify.sdk.android.player">Player.Builder</a>&nbsp;builder,
         <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a>&nbsp;reference,
         <a href="../../../../../com/spotify/sdk/android/player/Player.InitializationObserver.html" title="interface in com.spotify.sdk.android.player">Player.InitializationObserver</a>&nbsp;observer)</code>
<div class="block">Get (or possibly create) an instance of the player with custom components.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../com/spotify/sdk/android/player/Spotify.html#getReferenceCount--">getReferenceCount</a></span>()</code>
<div class="block">Check how many references to the player currently exists.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#clone--" title="class or interface in java.lang">clone</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#equals-java.lang.Object-" title="class or interface in java.lang">equals</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#finalize--" title="class or interface in java.lang">finalize</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#getClass--" title="class or interface in java.lang">getClass</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#hashCode--" title="class or interface in java.lang">hashCode</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#notify--" title="class or interface in java.lang">notify</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#notifyAll--" title="class or interface in java.lang">notifyAll</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#toString--" title="class or interface in java.lang">toString</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#wait--" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#wait-long-" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#wait-long-int-" title="class or interface in java.lang">wait</a></code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="getPlayer-com.spotify.sdk.android.player.Config-java.lang.Object-com.spotify.sdk.android.player.Player.InitializationObserver-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPlayer</h4>
<pre>public static&nbsp;<a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player">Player</a>&nbsp;getPlayer(<a href="../../../../../com/spotify/sdk/android/player/Config.html" title="class in com.spotify.sdk.android.player">Config</a>&nbsp;config,
                               <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a>&nbsp;reference,
                               <a href="../../../../../com/spotify/sdk/android/player/Player.InitializationObserver.html" title="interface in com.spotify.sdk.android.player">Player.InitializationObserver</a>&nbsp;observer)</pre>
<div class="block">Get (or possibly create) an instance of the player.
 <p>
 If you have multiple fragments which all
 want their own player, you should take care to make sure that only <b>one</b> thread calls
 this to initialize the player.
 <p>
 <b>SUPER IMPORTANT:</b> you must call <a href="../../../../../com/spotify/sdk/android/player/Spotify.html#destroyPlayer-java.lang.Object-"><code>destroyPlayer(Object)</code></a> when you are finished
 using the Player, otherwise native resources will be leaked.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>config</code> - Configuration object for the player.</dd>
<dd><code>reference</code> - Object which owns this player. This same object <b>must</b> be passed to
                  <a href="../../../../../com/spotify/sdk/android/player/Spotify.html#destroyPlayer-java.lang.Object-"><code>destroyPlayer(Object)</code></a>.</dd>
<dd><code>observer</code> - Observer to be notified when initialization is complete. In the event that
                  the player has already been initialized, then
                  <a href="../../../../../com/spotify/sdk/android/player/Player.InitializationObserver.html#onInitialized-com.spotify.sdk.android.player.Player-"><code>Player.InitializationObserver.onInitialized(Player)</code></a>
                  will be called directly.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd><a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player"><code>Player</code></a> instance</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../com/spotify/sdk/android/player/Spotify.html#getPlayer-com.spotify.sdk.android.player.Config-java.lang.Object-com.spotify.sdk.android.player.Player.InitializationObserver-"><code>getPlayer(Config, Object, Player.InitializationObserver)</code></a></dd>
</dl>
</li>
</ul>
<a name="getPlayer-com.spotify.sdk.android.player.Player.Builder-java.lang.Object-com.spotify.sdk.android.player.Player.InitializationObserver-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPlayer</h4>
<pre>public static&nbsp;<a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player">Player</a>&nbsp;getPlayer(<a href="../../../../../com/spotify/sdk/android/player/Player.Builder.html" title="class in com.spotify.sdk.android.player">Player.Builder</a>&nbsp;builder,
                               <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a>&nbsp;reference,
                               <a href="../../../../../com/spotify/sdk/android/player/Player.InitializationObserver.html" title="interface in com.spotify.sdk.android.player">Player.InitializationObserver</a>&nbsp;observer)</pre>
<div class="block">Get (or possibly create) an instance of the player with custom components.
 <p>
 If you have multiple fragments which all
 want their own player, you should take care to make sure that only <b>one</b> thread calls
 this to initialize the player.
 <p>
 <b>SUPER IMPORTANT:</b> you must call <a href="../../../../../com/spotify/sdk/android/player/Spotify.html#destroyPlayer-java.lang.Object-"><code>destroyPlayer(Object)</code></a> when you are finished
 using the Player, otherwise native resources will be leaked.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>builder</code> - <a href="../../../../../com/spotify/sdk/android/player/Player.Builder.html" title="class in com.spotify.sdk.android.player"><code>Player.Builder</code></a> object.</dd>
<dd><code>reference</code> - Object which owns this player. This same object <b>must</b> be passed to
                  <a href="../../../../../com/spotify/sdk/android/player/Spotify.html#destroyPlayer-java.lang.Object-"><code>destroyPlayer(Object)</code></a>.</dd>
<dd><code>observer</code> - Observer to be notified when initialization is complete. In the event that
                  the player has already been initialized, then
                  <a href="../../../../../com/spotify/sdk/android/player/Player.InitializationObserver.html#onInitialized-com.spotify.sdk.android.player.Player-"><code>Player.InitializationObserver.onInitialized(Player)</code></a>
                  will be called directly.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Initialized <a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player"><code>Player</code></a> instance</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../com/spotify/sdk/android/player/Player.Builder.html" title="class in com.spotify.sdk.android.player"><code>Player.Builder</code></a></dd>
</dl>
</li>
</ul>
<a name="destroyPlayer-java.lang.Object-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>destroyPlayer</h4>
<pre>public static&nbsp;void&nbsp;destroyPlayer(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a>&nbsp;reference)</pre>
<div class="block">Release a player resource.
 <p>
 Since there is only a single instance of the player, it is
 refcounted using Object instances, which must be correctly registered in the call to
 <a href="../../../../../com/spotify/sdk/android/player/Spotify.html#getPlayer-com.spotify.sdk.android.player.Config-java.lang.Object-com.spotify.sdk.android.player.Player.InitializationObserver-"><code>getPlayer(Config, Object, Player.InitializationObserver)</code></a>
 The player will only be actually destroyed once the last object has released it.
 <p>
 This convenience method calls <a href="../../../../../com/spotify/sdk/android/player/Player.html#shutdown--"><code>Player.shutdown()</code></a> under the hood allowing
 all queued and unfinished commands to complete therefore it is wrong to assume
 that the player is completely destroyed after calling it.
 To make sure that the player is completely shut down use <a href="../../../../../com/spotify/sdk/android/player/Spotify.html#awaitDestroyPlayer-java.lang.Object-long-java.util.concurrent.TimeUnit-"><code>awaitDestroyPlayer(Object, long, java.util.concurrent.TimeUnit)</code></a>
 or poll for the state with: <a href="../../../../../com/spotify/sdk/android/player/Player.html#isTerminated--"><code>Player.isTerminated()</code></a>
 <p>
 Making sure that the player instance is destroyed is essential if you're planning
 on recreating it. Trying to create a new player when the old one is still shutting down
 will result in an error.
 <p>
 Ideally, if you are using a <a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player"><code>Player</code></a> from an
 Activity or Fragment, you should call this method in the <code>onDestroy()</code> overridden method.
 This method is safe to call even if your Activity/Fragment exited early and never finished
 creating its player. <b>Bottom line -- always call this</b>.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>reference</code> - Object which owned this player.</dd>
</dl>
</li>
</ul>
<a name="awaitDestroyPlayer-java.lang.Object-long-java.util.concurrent.TimeUnit-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>awaitDestroyPlayer</h4>
<pre>public static&nbsp;boolean&nbsp;awaitDestroyPlayer(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a>&nbsp;reference,
                                         long&nbsp;timeout,
                                         <a href="http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/TimeUnit.html?is-external=true" title="class or interface in java.util.concurrent">TimeUnit</a>&nbsp;timeUnit)
                                  throws <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/InterruptedException.html?is-external=true" title="class or interface in java.lang">InterruptedException</a></pre>
<div class="block">Release a player resource.
 <p>
 A convenience method that will release a player resource and perform synchronous
 shutdown if there's no remaining references to the Player instance.
 Calling this method is an equivalent of:
 <pre><code>
 player.shutdown();
 player.awaitTermination(timeout, timeUnit);
 </code></pre>
 <p>
 Making sure that the player instance is destroyed is essential if you're planning
 on recreating it. Trying to create a new player when the old one is still shutting down
 will result in an error.
 <p>
 Ideally, if you are using a <a href="../../../../../com/spotify/sdk/android/player/Player.html" title="class in com.spotify.sdk.android.player"><code>Player</code></a> from an
 Activity or Fragment, you should call this method in the onDestroy() overridden method.
 This method is safe to call even if your Activity/Fragment exited early and never finished
 creating its player.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>reference</code> - Object which owns this player</dd>
<dd><code>timeout</code> - the maximum time to wait</dd>
<dd><code>timeUnit</code> - the time unit of the timeout argument</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if player terminated and false if the timeout elapsed before termination
 or if there are other references to the player.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/InterruptedException.html?is-external=true" title="class or interface in java.lang">InterruptedException</a></code> - if interrupted while waiting</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../com/spotify/sdk/android/player/Spotify.html#destroyPlayer-java.lang.Object-"><code>destroyPlayer(Object)</code></a></dd>
</dl>
</li>
</ul>
<a name="getReferenceCount--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>getReferenceCount</h4>
<pre>public static&nbsp;int&nbsp;getReferenceCount()</pre>
<div class="block">Check how many references to the player currently exists.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The count of active references</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="../../../../../com/spotify/sdk/android/player/package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
<div class="aboutLanguage">&copy; Spotify AB, 2014. <a href="https://developer.spotify.com/developer-terms-of-use/" target="_blank">Terms of Use</a></div>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../../com/spotify/sdk/android/player/PlayerStateCallback.html" title="interface in com.spotify.sdk.android.player"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li>Next&nbsp;Class</li>
</ul>
<ul class="navList">
<li><a href="../../../../../index.html?com/spotify/sdk/android/player/Spotify.html" target="_top">Frames</a></li>
<li><a href="Spotify.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
